<<<<<<< HEAD
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.c                                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: marvin <marvin@student.42.fr>              +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2020/05/01 15:41:55 by marvin            #+#    #+#             */
/*   Updated: 2020/05/19 17:34:59 by ryukim           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "cub3d.h"

int		check_error_input(int argc, char **argv)
{
	int	mode;

	mode = -1;
	if (argc == 2)
	{
        if (!(ft_strncmp(argv[1] + ft_strlen(argv[1] - 4), ".cub", 10)))
            mode = 1;
    }
    else if (argc == 3 && !(ft_strncmp(argv[2], "--save", 10)))
        mode = 2;
    else
        exit(-1);
    return (mode);
}

void    preproc_map_du(int idx, int idx2, int mode, cub *base)
{
    if (mode == 0 || mode == 1)
	{
        base->dirY = 0;
		base->planeX = 0;
		base->dirX = 1.0;
		base->planeY = 1.0;
    if (mode == 0)
        base->dirX *= -1;
    if (mode == 1)
        base->planeY *= -1;
    }
    if (mode == 2 || mode == 3)
	{
		base->dirX = 0;
        base->planeY = 0;
		base->dirY = 1.0;
		base->planeX = 1.0;
		if (mode == 3)
        {
            base->dirY = -1.0;
		    base->planeX = -1.0;
        }
    }
    base->posX = (double)idx;
    base->posY = (double)idx2;
}

void    preproc_map(char **worldMap, int maplen, cub *base)
{
    int idx;
    int idx2;
    int len;

    idx = -1;
    while(++idx < maplen)
    {
        idx2 = -1;
		len = ft_strlen(worldMap[idx]);
        while (++idx2 < len)
        {
            if (worldMap[idx][idx2] >= '0' && worldMap[idx][idx2] <= '9')
				worldMap[idx][idx2] -= '0';
			if (worldMap[idx][idx2] == 'N')
                preproc_map_du(idx, idx2, 0, base);
			if (worldMap[idx][idx2] == 'S')
                preproc_map_du(idx, idx2, 1, base);
			if (worldMap[idx][idx2] == 'E')
                preproc_map_du(idx, idx2, 2, base);
			if (worldMap[idx][idx2] == 'W')
                preproc_map_du(idx, idx2, 3, base);
        }
    }
}

int     run_mlx(cub* base)
{
    mlx_key_hook(base->win, do_key, base);
	//mlx_hook(base.win, Exit, 0, exit_proc, 0);
    mlx_loop_hook(base->mlx, render_main, base);
	mlx_loop(base->mlx);
    return (1);
}

int     main(int argc, char *argv[])
{
    int     maplen;
    cub     base;

    base.check = 0;
    base.mode = check_error_input(argc, argv);
    base.mlx = mlx_init();
    maplen = parse_main(argv[1], &base);
    preproc_map(base.worldMap, maplen, &base);
    base.win = mlx_new_window(base.mlx, base.w, base.h, "test");
    return (run_mlx(&base));
}
=======
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.c                                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: marvin <marvin@student.42.fr>              +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2020/05/01 15:41:55 by marvin            #+#    #+#             */
/*   Updated: 2020/05/06 21:08:50 by ryukim           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "cub3d.h"

int    check_error_input(int argc, char **argv)
{
	int mode;

	mode = -1;
	if (argc == 2)
	{
		if (!(ft_strncmp(argv[1] + ft_strlen(argv[1] - 4), ".cub", 10)))
			mode = 1;
	}
	else if (argc == 3 && !(ft_strncmp(argv[2], "--save", 10)))
		mode = 2;
	else
		exit(-1);
	return (mode);
}

void    preproc_map_du(int idx, int idx2, int mode, cub *base)
{
	if (mode == 0 || mode == 1)
	{
		base->dirY = 0;
		base->planeX = 0;
		base->dirX = 1.0;
		base->planeY = 1.0;
	if (mode == 0)
		base->dirX *= -1;
	if (mode == 1)
		base->planeY *= -1;
	}
	if (mode == 2 || mode == 3)
	{
		base->dirX = 0;
		base->planeY = 0;
		base->dirY = 1.0;
		base->planeX = 1.0;
		if (mode == 3)
		{
			base->dirY = -1.0;
			base->planeX = -1.0;
		}
	}
	base->posX = (double)idx;
	base->posY = (double)idx2;
}

void    preproc_map(char **worldMap, int maplen, cub *base)
{
	int idx;
	int idx2;
	int len;

	idx = -1;
	while(++idx < maplen)
	{
		idx2 = -1;
		len = ft_strlen(worldMap[idx]);
		while (++idx2 < len)
		{
			if (worldMap[idx][idx2] >= '0' && worldMap[idx][idx2] <= '9')
				worldMap[idx][idx2] -= '0';
			if (worldMap[idx][idx2] == 'N')
				preproc_map_du(idx, idx2, 0, base);
			if (worldMap[idx][idx2] == 'S')
				preproc_map_du(idx, idx2, 1, base);
			if (worldMap[idx][idx2] == 'E')
				preproc_map_du(idx, idx2, 2, base);
			if (worldMap[idx][idx2] == 'W')
				preproc_map_du(idx, idx2, 3, base);
		}
	}
}

int     run_mlx(cub* base)
{
	mlx_key_hook(base->win, do_key, base);
	//mlx_hook(base.win, Exit, 0, exit_proc, 0);
	mlx_loop_hook(base->mlx, render_main, base);
	mlx_loop(base->mlx);
	return (1);
}

int     main(int argc, char *argv[])
{
	int     maplen;
	cub     base;

	base.check = 0;
	base.mode = check_error_input(argc, argv);
	base.mlx = mlx_init();
	maplen = parse_main(argv[1], &base);
	preproc_map(base.worldMap, maplen, &base);
	base.win = mlx_new_window(base.mlx, base.w, base.h, "test");
	return (run_mlx(&base));
}
>>>>>>> 097b05632a4660a422f576cf6e0cafda644f1b9f
